version: '1.0.{build}'

image: ubuntu

matrix:
  fast_finish: true

configuration:
  - Debug
  - Release

environment:
  UPDATE_ALTERNATIVE_PRIORITY: 9999

  matrix:
    - COMPILER: gcc
      COMPILER_CPP_NAME: g++
      COMPILER_VERSION_TARGET: 8

    - COMPILER: clang
      COMPILER_CPP_NAME: clang++
      COMPILER_VERSION_TARGET: 6.0

install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -y
  - sudo apt-get install ${COMPILER}-${COMPILER_VERSION_TARGET} ${COMPILER_CPP_NAME}-${COMPILER_VERSION_TARGET} -y
  - sudo update-alternatives --install /usr/bin/${COMPILER} ${COMPILER} /usr/bin/${COMPILER}-${COMPILER_VERSION_TARGET} ${UPDATE_ALTERNATIVE_PRIORITY} --slave /usr/bin/${COMPILER_CPP_NAME} ${COMPILER_CPP_NAME} /usr/bin/${COMPILER_CPP_NAME}-${COMPILER_VERSION_TARGET}

before_build:
  # Debug logs
  - lsb_release -a
  - ldd --version
  - ${COMPILER_CPP_NAME} -v
  - env

  # Appveyor limitation
  - git submodule update --init --recursive
  - mkdir build && cd build
  - cmake -DCMAKE_CXX_COMPILER=/usr/bin/${COMPILER_CPP_NAME} -DCMAKE_BUILD_TYPE=${CONFIGURATION} ..

build_script:
  - make -j8 VERBOSE=1

test_script:
  - ./bin/test_${APPVEYOR_PROJECT_NAME}
  - if [ "${CONFIGURATION}" = "Release" ]; then
      ./bin/benchmark_${APPVEYOR_PROJECT_NAME};
    fi

# TODOOOOOOOOOOOOOOOOOOOOOOOOOOO:
# sanitizers + debug flag?
